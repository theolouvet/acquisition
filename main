from PIL import Image
import numpy as np
import matplotlib.pyplot as plt
import cv2

def update_map(ind, map_x, map_y):
    sigma_x = 125
    sigma_y = 130
    for i in range(0, int(cap.get(4)) - 1):
        for j in range(0, int(cap.get(3))-1):

            map_x[i, j] =j + 105 * np.exp(-(pow(i - cap.get(3) * 0.5,2)/(2*pow(sigma_x,2)) + pow(j - cap.get(4) * 0.5,2)/(2*pow(sigma_y,2))))
            map_y[i, j] =i + 105 * np.exp(-(pow(i - cap.get(3) * 0.5,2)/(2*pow(sigma_x,2)) + pow(j - cap.get(4) * 0.5,2)/(2*pow(sigma_y,2))))
            #map_x[i,j] = j
            #map_y[i, j] = i



cap = cv2.VideoCapture(0)

bins=(8, 8, 8)
i = 0;
plt.figure(0)
translation_matrix = np.float32([ [1,0,10], [0,1,15] ])
map_x = np.zeros((int(cap.get(4)) , int(cap.get(3))),dtype=np.float32 )
map_y = np.zeros((int(cap.get(4)) , int(cap.get(3))),dtype=np.float32 )

angle = 3.14
alpha = np.cos(angle)/2
beta = np.sin(angle)/2
update_map(0, map_x, map_y)

rotation = np.float32([[alpha, beta, (1-alpha)*cap.get(3)/2 - beta*cap.get(4)/2 +10 ],[-1*beta, alpha, beta*cap.get(3)/2 + (1-alpha)*cap.get(4)/2 +15]])
while(True):
    ret, frame=cap.read()
    gray=cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    edges = cv2.Canny(gray,200,250)
    fps = cap.get(cv2.CAP_PROP_FPS)

    cv2.imshow('Capture_Video ', gray)
    dst = cv2.remap(gray, map_x, map_y, cv2.INTER_LINEAR)
    cv2.imshow('iug',dst)
    '''
    for i in range(0, int(cap.get(3)) - 1):
        for j in range(0, int(cap.get(4)) - 1):
            x = np.power(i- cap.get(3), 2)/(2*np.power(1,2))
            y = np.power(j- cap.get(4), 2)/(2*np.power(1,2))
            gauss_x[i,j] = 1 * np.exp(-x)
            gauss_y[i,j] = 1 * np.exp(-y)
    gauss = cv2.remap(gray,gauss_x, gauss_y,cv2.INTER_LINEAR)
    cv2.imshow("test", gauss)q

    gray = cv2.warpAffine(gray, rotation, (int(cap.get(3)), int(cap.get(4))))
    cv2.imshow('Capture_Video_edges', edges)
    cv2.imshow('Capture_Video ' , gray)
    hist = cv2.calcHist([gray], [0], None, [256], [0, 256])
    plt.plot(hist)
    plt.draw()
    plt.pause(0.0001)
    plt.cla()
    '''
    key=cv2.waitKey(1)
    if key & 0xFF == ord('q'):
        break
    elif key & 0xFF == ord('c'):
        i = i + 1
        cv2.imwrite("image"+str(i)+".jpg", gray)




cap.release()
cv2.destroyAllWindows()
